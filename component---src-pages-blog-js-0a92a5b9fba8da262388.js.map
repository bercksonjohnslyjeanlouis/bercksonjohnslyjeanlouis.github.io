{"version":3,"file":"component---src-pages-blog-js-0a92a5b9fba8da262388.js","mappings":"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","sources":["webpack://jlbj.github.io/./src/pages/blog.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardBody.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardImg.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardLink.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardText.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://jlbj.github.io/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport posts from '../data/fr/posts.json'\r\nimport Layout from \"../components/Layout\";\r\nimport Hero from \"../components/Hero\";\r\nimport SEO from \"../components/SEO\";\r\n\r\nconst Blog = () => {\r\n    const [visiblePosts, setVisiblePosts] = useState(4);\r\n\r\n    const loadMorePosts = () => {\r\n        setVisiblePosts((prevVisiblePosts) => prevVisiblePosts + 4);\r\n    };\r\n\r\n    return (\r\n        <Layout page={'BLOG'} description={\"Les articles que j'ai ecrtits...\"}>\r\n        <section className=\"about section\">\r\n            <div className=\"section-inner-g\">\r\n                <div className=\"content\">\r\n                    <Row className=\"d-flex gap-3\">\r\n                        {posts.slice(0, visiblePosts).map((post, index) => (\r\n                            <Col key={index} md={6} className=\"mb-4\">\r\n                                <Card className=\"p-0 animate-box\" data-animate-effect=\"fadeInLeft\">\r\n                                    <a href={post.link} className=\"m-0 p-0\" >\r\n                                        <Card.Img\r\n                                            title={post.description}\r\n                                            src={'../../'+post.image}\r\n                                            alt={post.description}\r\n                                            style={{ display: 'block' }}\r\n                                            onLoad={() => {}}\r\n                                        />\r\n                                    </a>\r\n                                    <Card.Body>\r\n                                        <a href={post.link} style={{ textDecoration: 'none' }}>\r\n                                            <h5 className=\"card-title\">{post.title}</h5>\r\n                                        </a>\r\n                                        <p className=\"card-text text-justify\" style={{ textAlign: 'justify' }}>{post.summary}</p>\r\n                                        <p>\r\n                                            {post.tags.map((tag, tagIndex) => (\r\n                                                <React.Fragment key={tagIndex}>\r\n                                                    <em className=\"\">{`#${tag}  `}</em>&nbsp;&nbsp;\r\n                                                    <small>&nbsp;</small>\r\n                                                </React.Fragment>\r\n                                            ))}\r\n                                        </p>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n\r\n                    <div className=\"my-3 d-flex justify-content-center align-items-center text-center\">\r\n                        <Button\r\n                            style={{display : (visiblePosts >= posts.length) ? 'none' : 'block'}}\r\n                            className=\"btn btn-cta-primary\"\r\n                            onClick={loadMorePosts}\r\n                        >\r\n                            VOIR PLUS D'ARTICLES +\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"my-3 d-flex justify-content-center align-items-center text-center\">\r\n                        <a\r\n                            href=\"https://www.linkedin.com/newsletters/berckson-johnsly-jean-louis-7029083089146400768\"\r\n                            className=\"btn btn-cta-primary\"\r\n                            style={{ display: visiblePosts >= posts.length ? 'block' : 'none' }}\r\n                        >\r\n                            ABONNEZ-VOUS Ã€ MON BLOG\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Blog;\r\n\r\n\r\nexport const Head = () => <SEO title={'Berckson Johnsly JEAN-LOUIS'} ></SEO>","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Blog","visiblePosts","setVisiblePosts","useState","React","Layout","page","description","className","Row","posts","slice","map","post","index","Col","key","md","Card","href","link","Img","title","src","image","alt","style","display","onLoad","Body","textDecoration","textAlign","summary","tags","tag","tagIndex","Button","length","onClick","loadMorePosts","prevVisiblePosts","Head","SEO","CardBody","bsPrefix","as","Component","props","ref","displayName","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","Object","assign","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}